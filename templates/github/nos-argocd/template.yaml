apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: nos-argocd-template
  title: Add ArgoCD manifests to an existing project
  description: NOS - Add ArgoCD to an existing project
  tags:
    - recommended
    - argocd
spec:
  owner: m-nara
  system: NOS
  type: service

  parameters:
    - title: Provide information about the existing component
      required:
        - orgName
        - repoName
        - port
        - componentName
      properties:
        orgName:
          title: Organization Name
          type: string
        repoName:
          title: Repository Name
          type: string
        componentName:
          title: Component Name
          type: string
          description: Attach the manifests to an existing component
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Component
        port:
          title: Port
          type: number
          description: The port exposed for the application
          default: 8080
    - title: Provide information about the new component
      required:
        - owner
        - system
      properties:
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
        system:
          title: System
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - System
    - title: Provide information about the ArgoCD deployment
      required:
        - imageRepository
        - imageUrl
      properties:
        imageRepository:
          title: Select a registry
          type: string
          default: image-registry.openshift-image-registry.svc:5000
          enum:
            - image-registry.openshift-image-registry.svc:5000
            - quay.io
          enumNames:
            - Internal OpenShift Registry
            - Quay
        imageUrl:
          title: Image URL
          type: string
          description: Enter the Quay.io or OpenShift Image URL <REGISTRY>/<IMAGE_URL>/<IMAGE_NAME>
  steps:
    - id: catalogTemplate
      name: Generating the Catalog Info Component
      action: fetch:template
      input:
        url: ../../../skeletons/catalog-info/
        values:
          # Gitops specific values
          entityKind: Resource
          dependsOn: ${{ parameters.componentName }}

          # Normal values
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}-gitops
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: gitops
          description: Contains the ArgoCD manifests for ${{ parameters.repoName }}
          imageUrl: ${{ parameters.imageUrl }}
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          sourceControl: github.com

    - id: manifestsTemplate
      name: Generating the Manifests Component
      action: fetch:template
      input:
        url: ./skeleton/
        values:
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: gitops
          description: Contains the ArgoCD manifests for ${{ parameters.repoName }}
          imageUrl: ${{ parameters.imageUrl }}
          imageRepository: ${{ parameters.imageRepository }}
          port: ${{ parameters.port }}
          sourceControl: github.com

    - id: publish
      name: Publishing to the Source Code Repository
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: Contains the ArgoCD manifests for ${{ parameters.repoName }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.repoName }}-gitops
        defaultBranch: main
        repoVisibility: private

    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml

  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
